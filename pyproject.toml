[tool.poetry]
name = "django-starter"
version = "0.1.0"
description = ""
authors = ["Alexander Skrivanos <alex@skrivanos.se>"]

[tool.poetry.dependencies]
python = "3.11.5"

# Django and django extensions
django = "^4.2.5"
django-anymail = "^10.1"
django-environ = "^0.11.2"
django-extensions = "^3.2.3"
django-jazzmin = "^2.6.0"
django-stubs-ext = "^4.2.2"
whitenoise = "^6.5.0"

# Libs
celery = "^5.3.4"
iptools = "^0.7.0"
sentry-sdk = "^1.31.0"
psycopg = {extras = ["binary"], version = "^3.1.12"}

[tool.poetry.group.dev.dependencies]
# Django
django-debug-toolbar = "^4.2.0"
django-extra-checks = "^0.13.3"
django-querycount = "^0.8.3"
werkzeug = "^3"  # needed for django_extensions runserver_plus

# Tests
pytest = "^7.1"
pytest-cov = "^4.1.0"
pytest-deadfixtures = "^2.2"
pytest-django = "^4.5"
pytest-randomly = "^3.11"
pytest-testmon = "^2.0.12"
pytest-timeout = "^2.1"

# Linting
black = "^23.9.1"
ruff = "^0.0.292"
pre-commit = "^3.4.0"
factory-boy = "^3.3.0"

# Typing
celery-types = "^0.20.0"
django-stubs = {extras = ["compatible-mypy"], version = "^4.2.4"}
mypy = "1.5.1"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# See: https://docs.astral.sh/ruff/configuration/
line-length = 100
exclude = [".venv"]
# See: https://docs.astral.sh/ruff/rules
select = [
  "A",
  "ANN",
  "ASYNC",
  "B",
  "C4",
  "C9",
  "COM",
  "D",
  "DJ",
  "E",
  "EM",
  "F",
  "G",
  "I",
  "N",
  "PERF",
  "PL",
  "PT",
  "Q",
  "RUF",
  "S",
  "T",
  "TRY",
  "UP",
  "W",
]
ignore = [
  "ANN101",
  "D100",
  "D104",
  "D106",
  "D200",
  "D212",
  "D401",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"app/migrations/*.py" = [
  "E501",
  "D101",
]
"tests/*.py" = [
  "S101",
  "D101",
  "D102",
]
"app/models/__init__.py" = ["F401"]
"app/settings/*.py" = [
  "F401",
  "F403",
  "F405",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-first-party = ["app"]
lines-between-types = 1
lines-after-imports = 2
section-order = ["future", "standard-library", "django", "first-party", "local-folder", "third-party"]

[tool.ruff.isort.sections]
"django" = ["django"]


[tool.mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
allow_redefinition = false
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

plugins = [
  "mypy_django_plugin.main"
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "app.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
# django-stubs uses Any for models...
module = "app.models.*"
disallow_any_explicit = false

[tool.django-stubs]
django_settings_module = "app.settings.base"

[tool.pytest.ini_options]
# pytest configuration:
# https://docs.pytest.org/en/stable/customize.html

# pytest-django configuration:
# https://pytest-django.readthedocs.io/en/latest/
DJANGO_SETTINGS_MODULE = "app.settings.test"

# Time out tests after this amount of seconds.
# https://pypi.org/project/pytest-timeout/
timeout = 5

# Strict `@xfail` by default
xfail_strict = true

# Directories that are ignored by the pytest collector
norecursedirs = "*.egg .eggs .git __pycache__ settings"

# Additional options to run with
addopts = [
  "--strict-markers",
  "--strict-config",
  "--doctest-modules",
  "--fail-on-template-vars",
  "--dup-fixtures",
  "--tb=short",
  "--cov=app",
  "--cov=tests",
  "--cov-branch",
  "--cov-report=term-missing:skip-covered",
  "--cov-report=html"
]
